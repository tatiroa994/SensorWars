// let count = 0;
// const interval = setInterval(() => {
//     const data = createDataRandom(count);

//     // processMain(data);
//     console.log(data);

//     if (++count > 60) clearInterval(interval);
// }, 1000);

// const createDataRandom = (count) => {
//     return `2021-06-01 08:00:0${count},(Bomber|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)}),(Bomber|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)}),(Gunship|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)}),(-|${Math.floor(Math.random() * 200)})`
//     // return `2021-06-01 08:00:0${count},(Bomber|${0}),(-|${Math.floor(Math.random() * 200)}),(-|${133})`
// };

const data = [
    "2021-06-01 08:00:00,(Bomber|93),(-|181),(-|167),(Bomber|133),(-|190),(-|188),(Bomber|175),(-|182),(-|135),(-|149)",
    "2021-06-01 08:00:01,(Bomber|68),(-|162),(-|109),(Bomber|133),(-|52),(-|171),(Bomber|110),(-|88),(-|17),(-|68)",
    "2021-06-01 08:00:02,(Bomber|65),(-|33),(-|10),(Bomber|133),(-|137),(-|111),(Bomber|198),(-|138),(-|19),(-|7)",
    "2021-06-01 08:00:03,(Bomber|104),(-|193),(-|159),(Bomber|133),(-|62),(-|83),(Bomber|150),(-|4),(-|35),(-|63)",
    "2021-06-01 08:00:04,(Bomber|166),(-|198),(-|31),(Bomber|133),(-|180),(-|117),(Bomber|115),(-|75),(-|183),(-|90)",
    "2021-06-01 08:00:05,(Bomber|25),(-|97),(-|6),(Bomber|133),(-|21),(-|120),(Bomber|3),(-|118),(-|31),(-|51)",
    "2021-06-01 08:00:06,(Bomber|78),(-|76),(-|34),(Bomber|133),(-|167),(-|156),(Bomber|102),(-|174),(-|153),(-|139)",
    "2021-06-01 08:00:07,(Bomber|84),(-|148),(-|144),(Bomber|133),(-|183),(-|65),(Bomber|146),(-|37),(-|118),(-|156)",
    "2021-06-01 08:00:08,(Bomber|81),(-|146),(-|68),(Bomber|133),(-|176),(-|108),(Bomber|169),(-|19),(-|104),(-|78)",
    "2021-06-01 08:00:09,(Bomber|43),(-|4),(-|82),(Bomber|133),(-|170),(-|69),(Bomber|145),(-|64),(-|115),(-|26)",
    "2021-06-01 08:00:010,(Bomber|21),(-|114),(-|147),(Bomber|133),(-|131),(-|1),(Bomber|150),(-|112),(-|82),(-|114)",
    "2021-06-01 08:00:011,(Bomber|28),(-|54),(-|177),(Bomber|133),(-|51),(-|45),(Bomber|8),(-|51),(-|8),(-|51)",
    "2021-06-01 08:00:012,(Bomber|6),(-|32),(-|5),(Bomber|133),(-|14),(-|127),(Bomber|25),(-|157),(-|183),(-|24)",
    "2021-06-01 08:00:013,(Bomber|197),(-|14),(-|194),(Bomber|133),(-|95),(-|87),(Bomber|83),(-|84),(-|7),(-|168)",
    "2021-06-01 08:00:014,(Bomber|106),(-|16),(-|56),(Bomber|133),(-|181),(-|26),(Bomber|178),(-|140),(-|115),(-|29)",
    "2021-06-01 08:00:015,(Bomber|20),(-|100),(-|111),(Bomber|133),(-|19),(-|194),(Bomber|44),(-|173),(-|159),(-|164)",
    "2021-06-01 08:00:016,(Bomber|56),(-|156),(-|140),(Bomber|133),(-|147),(-|170),(Bomber|174),(-|144),(-|46),(-|178)",
    "2021-06-01 08:00:017,(Bomber|100),(-|65),(-|18),(Bomber|133),(-|90),(-|80),(Bomber|111),(-|51),(-|78),(-|47)",
    "2021-06-01 08:00:018,(Bomber|17),(-|71),(-|101),(Bomber|133),(-|84),(-|167),(Bomber|120),(-|28),(-|87),(-|148)",
    "2021-06-01 08:00:019,(Bomber|93),(-|92),(-|162),(Bomber|133),(-|49),(-|106),(Bomber|1),(-|40),(-|93),(-|112)",
    "2021-06-01 08:00:020,(Bomber|20),(-|196),(-|12),(Bomber|133),(-|77),(-|68),(Bomber|33),(-|115),(-|22),(-|7)",
    "2021-06-01 08:00:021,(Bomber|9),(-|108),(-|43),(Bomber|133),(-|70),(-|81),(Bomber|133),(-|18),(-|144),(-|189)",
    "2021-06-01 08:00:022,(Bomber|146),(-|137),(-|58),(Bomber|133),(-|108),(-|116),(Bomber|128),(-|26),(-|97),(-|150)",
    "2021-06-01 08:00:023,(Bomber|106),(-|93),(-|141),(Bomber|133),(-|61),(-|121),(Bomber|114),(-|5),(-|21),(-|170)",
    "2021-06-01 08:00:024,(Bomber|83),(-|24),(-|192),(Bomber|133),(-|181),(-|105),(Bomber|6),(-|99),(-|102),(-|130)",
    "2021-06-01 08:00:025,(Bomber|189),(-|123),(-|90),(Bomber|133),(-|46),(-|132),(Bomber|197),(-|141),(-|39),(-|20)",
    "2021-06-01 08:00:026,(Bomber|119),(-|156),(-|52),(Bomber|133),(-|160),(-|126),(Bomber|118),(-|52),(-|139),(-|160)",
    "2021-06-01 08:00:027,(Bomber|9),(-|183),(-|89),(Bomber|133),(-|150),(-|151),(Bomber|97),(-|109),(-|76),(-|199)",
    "2021-06-01 08:00:028,(Bomber|177),(-|157),(-|59),(Bomber|133),(-|122),(-|156),(Bomber|127),(-|67),(-|155),(-|90)",
    "2021-06-01 08:00:029,(Bomber|66),(-|135),(-|27),(Bomber|133),(-|79),(-|28),(Bomber|97),(-|116),(-|64),(-|45)",
    "2021-06-01 08:00:030,(Bomber|95),(-|91),(-|13),(Bomber|133),(-|18),(-|38),(Bomber|85),(-|15),(-|102),(-|33)",
    "2021-06-01 08:00:031,(Bomber|62),(-|149),(-|165),(Bomber|133),(-|94),(-|91),(Bomber|73),(-|60),(-|95),(-|68)",
    "2021-06-01 08:00:032,(Bomber|176),(-|4),(-|96),(Bomber|133),(-|184),(-|53),(Bomber|17),(-|163),(-|67),(-|146)",
    "2021-06-01 08:00:033,(Bomber|48),(-|152),(-|146),(Bomber|184),(-|12),(-|120),(Gunship|0),(-|187),(-|136),(-|31)",
    "2021-06-01 08:00:034,(Bomber|191),(-|157),(-|29),(Bomber|78),(-|36),(-|120),(Gunship|0),(-|188),(-|50),(-|55)",
    "2021-06-01 08:00:035,(Bomber|179),(-|81),(-|164),(Bomber|54),(-|163),(-|60),(Gunship|0),(-|160),(-|123),(-|141)",
    "2021-06-01 08:00:036,(Bomber|63),(-|165),(-|186),(Bomber|184),(-|104),(-|10),(Gunship|0),(-|69),(-|142),(-|77)",
    "2021-06-01 08:00:037,(Bomber|40),(-|77),(-|95),(Bomber|9),(-|78),(-|184),(Gunship|0),(-|94),(-|80),(-|153)",
    "2021-06-01 08:00:038,(Bomber|117),(-|37),(-|6),(Bomber|80),(-|106),(-|23),(Gunship|0),(-|44),(-|20),(-|1)",
    "2021-06-01 08:00:039,(Bomber|102),(-|7),(-|67),(Bomber|70),(-|143),(-|113),(Gunship|0),(-|188),(-|19),(-|96)",
    "2021-06-01 08:00:040,(Bomber|38),(-|78),(-|12),(Bomber|145),(-|69),(-|64),(Gunship|0),(-|78),(-|174),(-|7)",
    "2021-06-01 08:00:041,(Bomber|112),(-|149),(-|18),(Bomber|166),(-|183),(-|135),(Gunship|0),(-|26),(-|112),(-|150)",
    "2021-06-01 08:00:042,(Bomber|66),(-|47),(-|1),(Bomber|162),(-|82),(-|172),(Gunship|0),(-|168),(-|149),(-|7)",
    "2021-06-01 08:00:043,(Bomber|6),(-|156),(-|187),(Bomber|176),(-|85),(-|151),(Gunship|0),(-|186),(-|129),(-|47)",
    "2021-06-01 08:00:044,(Bomber|28),(-|8),(-|58),(Bomber|74),(-|150),(-|82),(Gunship|0),(-|113),(-|146),(-|34)",
    "2021-06-01 08:00:045,(Bomber|145),(-|36),(-|5),(Bomber|132),(-|68),(-|112),(Gunship|0),(-|176),(-|124),(-|80)",
    "2021-06-01 08:00:046,(Bomber|158),(-|186),(-|189),(Bomber|30),(-|30),(-|82),(Gunship|0),(-|154),(-|49),(-|185)",
    "2021-06-01 08:00:047,(Bomber|64),(-|155),(-|79),(Bomber|181),(-|85),(-|161),(Gunship|0),(-|162),(-|49),(-|21)",
    "2021-06-01 08:00:048,(Bomber|84),(-|172),(-|139),(Bomber|82),(-|53),(-|52),(Gunship|0),(-|102),(-|76),(-|48)",
    "2021-06-01 08:00:049,(Bomber|9),(-|88),(-|118),(Bomber|138),(-|194),(-|116),(Gunship|0),(-|163),(-|49),(-|10)",
    "2021-06-01 08:00:050,(Bomber|91),(-|156),(-|27),(Bomber|50),(-|13),(-|101),(Gunship|0),(-|80),(-|154),(-|89)",
    "2021-06-01 08:00:051,(Bomber|96),(-|57),(-|9),(Bomber|107),(-|195),(-|100),(Gunship|0),(-|190),(-|12),(-|55)",
    "2021-06-01 08:00:052,(Bomber|144),(-|106),(-|155),(Bomber|117),(-|71),(-|127),(Gunship|0),(-|187),(-|84),(-|156)",
    "2021-06-01 08:00:053,(Bomber|63),(-|36),(-|165),(Bomber|122),(-|111),(-|193),(Gunship|0),(-|149),(-|77),(-|14)",
    "2021-06-01 08:00:054,(Bomber|7),(-|161),(-|55),(Bomber|12),(-|193),(-|193),(Gunship|0),(-|44),(-|29),(-|103)",
    "2021-06-01 08:00:055,(Bomber|144),(-|44),(-|26),(Bomber|26),(-|157),(-|119),(Gunship|0),(-|115),(-|28),(-|12)",
    "2021-06-01 08:00:056,(Bomber|154),(-|49),(-|113),(Bomber|92),(-|188),(-|139),(Gunship|0),(-|69),(-|90),(-|6)",
    "2021-06-01 08:00:057,(Bomber|71),(-|188),(-|139),(Bomber|141),(-|191),(-|50),(Gunship|0),(-|55),(-|110),(-|131)",
    "2021-06-01 08:00:058,(Bomber|140),(-|191),(-|172),(Bomber|46),(-|109),(-|7),(Gunship|0),(-|65),(-|161),(-|187)",
    "2021-06-01 08:00:059,(Bomber|141),(-|152),(-|59),(Bomber|62),(-|146),(-|79),(Gunship|0),(-|12),(-|20),(-|43)",
    "2021-06-01 08:00:060,(Bomber|118),(-|150),(-|8),(Bomber|59),(-|93),(-|50),(Gunship|0),(-|109),(-|2),(-|190)"
];

let countData = 0;
let dataBefore = undefined;

const processMain = (dataNow) => {
    const splitNow = data[countData].split(",");

    const info = { timestamp: splitNow.shift() };

    const sensors = splitNow.map((value, i) => {
        let [ship, magto] = value.slice(1, value.length - 1).split("|");
        magto = Number(magto);

        let proximity = { count: 1, type: '' };
        let alert = { type: '' };

        if (magto === 0) {
            // Fallo en el sensor. (Opción 3-4)
            proximity.type = "inactive";

            if (dataBefore) {
                proximity.count = dataBefore.sensors[i].proximity.type === "danger" ? 1 : dataBefore.sensors[i].proximity.count + 1;

                if (proximity.count >= 32) {
                    alert.type = 2;
                } else {
                    alert.type = 1;
                }
            }

            // console.log(`➖ Sensor inactivo con ${proximity.count}sg: ${proximity.count >= 32 ? 'ALERTA' : ''} `);
        } else if (magto >= 100) {
            // Nave rebelde. (Opción 1)
            proximity.type = "danger";

            if (dataBefore) {
                proximity.count = dataBefore.sensors[i].proximity.type === "inactive" ? 1 : dataBefore.sensors[i].proximity.count + 1;

                if (proximity.count >= 30) {
                    alert.type = 2;
                } else {
                    alert.type = 1;
                }
            }

            // console.log(`⛔ Nave enemiga con ${proximity.count}sg: ${proximity.count >= 30 ? 'ALERTA' : ''}`);
        } else {
            // Nave de la estrella de la muerte. (Opción 2)

            proximity.count = 0;
            // console.log(`✅ Nave aliada`);
        }

        const saveInfo = { ship, magto, proximity, alert };
        return saveInfo;
    });

    info.position = ++countData;
    info.sensors = sensors;
    dataBefore = info;

    return countData;
};

const getBefore = () => {
    return dataBefore;
}

module.exports = {
    processMain,
    getBefore
}